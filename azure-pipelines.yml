trigger: { branches: { include: [ main ] } }
pr:       { branches: { include: [ main ] } }

variables:
  # 镜像仓库（注意是 -new）
  apiRepo: 'docker.io/rayrayye/timeapp-api-new'
  dockerfilePath: 'Dockerfile'
  buildContext: '.'

  githubOrgRepo: 'RookieToExpert/az305'
  configPath: 'kubernetes&docker/timeapp-config/overlays/prod'

  major: '1'
  counterKey: 'api-1'
  patch: $[ counter(variables['counterKey'], 0) ]
  version: '$(major).$(patch)'

stages:
- stage: Build
  displayName: Build & Push (api)
  jobs:
  - job: build
    pool: { vmImage: 'ubuntu-latest' }
    steps:
    - task: Docker@2
      displayName: Login Docker Hub
      inputs: { command: login, containerRegistry: 'toDockerHub' }

    - task: Docker@2
      displayName: Build+Push api:$(version)
      inputs:
        command: buildAndPush
        repository: '$(apiRepo)'
        Dockerfile: '$(dockerfilePath)'
        buildContext: '$(buildContext)'
        tags: |
          $(version)

- stage: ConfigPR
  displayName: Create PR (bump api tag)
  dependsOn: Build
  jobs:
  - job: pr
    pool: { vmImage: 'ubuntu-latest' }
    steps:
    - checkout: none

    - script: |
        set -euo pipefail
        curl -L https://github.com/mikefarah/yq/releases/download/v4.44.3/yq_linux_amd64 -o /usr/local/bin/yq
        chmod +x /usr/local/bin/yq
      displayName: Install yq

    - script: |
        set -euo pipefail

        git config --global user.name  "ado-bot"
        git config --global user.email "ado-bot@example.com"
        git config --global --add safe.directory /home/vsts/work

        GIT_URL="https://$(GITHUB_TOKEN)@github.com/$(githubOrgRepo).git"
        git clone "$GIT_URL" configrepo
        cd configrepo

        BR="bump-api-$(version)-$(Build.BuildId)"
        git switch -c "$BR"

        FILE="$(configPath)/kustomization.yaml"
        IMG_NAME="$(apiRepo)"
        VERSION="$(version)"
        yq -i '(.images[] | select(.name == env(IMG_NAME))).newTag = env(VERSION)' "$FILE"

        git add "$FILE"
        git commit -m "chore(api): bump to $(version)"
        git push -u origin "$BR"

        curl -sS -X POST "https://api.github.com/repos/$(githubOrgRepo)/pulls" \
          -H "Authorization: token $(GITHUB_TOKEN)" \
          -H "Accept: application/vnd.github+json" \
          -d "{\"title\":\"Bump api to $(version)\",\"body\":\"Update api image tag to $(version) for GitOps\",\"head\":\"$BR\",\"base\":\"main\",\"maintainer_can_modify\":true}"
      displayName: 'Bump api tag & open PR'
      env:
        GITHUB_TOKEN: $(GITHUB_TOKEN)
