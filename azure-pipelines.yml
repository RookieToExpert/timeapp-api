# ==== 触发器 ====
trigger:
  branches:
    include:
    - main
pr:
  branches:
    include:
    - main

# ==== 手动运行时可修改的入参（可选） ====
parameters:
- name: major               # 主版本（点击“Run pipeline”可改）
  type: string
  default: '1'
- name: version             # 可选：手动指定完整版本（例如 2.7）；若留空则走自动计数
  type: string
  default: ''

# ==== 变量 ====
variables:
  # 镜像、路径、K8s 对象
  dockerHubRepo: 'rayrayye/timeapp-api-new'
  dockerfilePath: 'Dockerfile'          # API 仓库里是大写 D
  buildContext: '.'
  k8sServiceConnection: 'k8s-sc'
  namespace: 'timeapp'
  deployment: 'web-api'
  container: 'api'

  # 版本规则：默认【major + 自动 patch 递增】；也支持手动 version 覆盖
  major: ${{ parameters.major }}
  counterKey: 'api-${{ parameters.major }}'     # 每个 major 单独计数
  patch: $[ counter(variables['counterKey'], 0) ]

  # 如果手动传入 version 就用它，否则用 major.patch
  ${{ if ne(parameters.version, '') }}:
    version: ${{ parameters.version }}
  ${{ if eq(parameters.version, '') }}:
    version: '$(major).$(patch)'

# ==== 流水线 ====
stages:
- stage: Build
  displayName: Build & Push API Image
  jobs:
  - job: build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Login Docker Hub
      inputs:
        command: login
        containerRegistry: 'toDockerHub'   # 你的 Docker Hub service connection 名

    - task: Docker@2
      displayName: Build+Push api:$(version)
      inputs:
        command: buildAndPush
        repository: '$(dockerHubRepo)'
        Dockerfile: '$(dockerfilePath)'
        buildContext: '$(buildContext)'
        tags: |
          $(version)

- stage: Deploy
  displayName: Deploy API to K8s
  dependsOn: Build
  jobs:
  - job: deploy
    steps:
    - task: Kubernetes@1
      displayName: Set image (web-api → $(version))
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: '$(k8sServiceConnection)'
        namespace: '$(namespace)'
        command: 'set'
        arguments: >
          image deployment/$(deployment)
          $(container)=docker.io/$(dockerHubRepo):$(version)

    - task: Kubernetes@1
      displayName: Wait rollout (web-api)
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: '$(k8sServiceConnection)'
        namespace: '$(namespace)'
        command: 'rollout'
        arguments: 'status deployment/$(deployment) --timeout=120s'
